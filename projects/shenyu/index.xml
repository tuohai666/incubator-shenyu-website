<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Apache ShenYu(current) on Apache ShenYu</title><link>/projects/shenyu/</link><description>Recent content in Apache ShenYu(current) on Apache ShenYu</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><atom:link href="/projects/shenyu/index.xml" rel="self" type="application/rss+xml"/><item><title>A multilingual HTTP client</title><link>/projects/shenyu/developer-shenyu-client/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/developer-shenyu-client/</guid><description> Description This document focuses on how to access gateways for HTTP services in other languages. How to customize the development of shenyu-http-client. Customize Http Client Request Method: POST Request Path: http://soul-admin/soul-client/springmvc-register, shenyu-admin represents IP + Port of admin Request Params：passing JSON type parameters through the body. { &amp;quot;appName&amp;quot;: &amp;quot;xxx&amp;quot;, //required &amp;quot;context&amp;quot;: &amp;quot;/xxx&amp;quot;, //required &amp;quot;path&amp;quot;: &amp;quot;xxx&amp;quot;, //required &amp;quot;pathDesc&amp;quot;: &amp;quot;xxx&amp;quot;, &amp;quot;rpcType&amp;quot;: &amp;quot;http&amp;quot;, //required &amp;quot;host&amp;quot;: &amp;quot;xxx&amp;quot;, //required &amp;quot;port&amp;quot;: xxx, //required &amp;quot;ruleName&amp;quot;: &amp;quot;xxx&amp;quot;, //required &amp;quot;enabled&amp;quot;: &amp;quot;true&amp;quot;, //required &amp;quot;registerMetaData&amp;quot;: &amp;quot;true&amp;quot; //required }</description></item><item><title>Apache ShenYu Admin Database Design</title><link>/projects/shenyu/database-design/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/database-design/</guid><description>Apache Shenyu Admin is the management system of the gateway, which can manage all plugins, selectors and rules visually, set users, roles and resources.
Plugin, Selector And Rule Plugin: ShenYu uses the plugin design idea to realize the hot plug of the plugin, which is easy to expand. Built-in rich plugins, including RPC proxy, circuit breaker and current limiting, authority and certification, monitoring, and more. Selector: Each plugin can set multiple selectors to carry out preliminary filtering of traffic.</description></item><item><title>Apache ShenYu Introduction</title><link>/projects/shenyu/overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/overview/</guid><description>What is the Apache ShenYu? This is an asynchronous, high-performance, cross-language, responsive API gateway.
Features Support various languages (http protocol), support Dubbo, Spring Cloud, gRPC, Motan, Sofa, Tars and other protocols. Plugin design idea, plugin hot swap, easy to expand. Flexible flow filtering to meet various flow control. Built-in rich plugin support, authentication, limiting, fuse, firewall, etc. Dynamic flow configuration, high performance. Support cluster deployment, A/B Test, blue-green release.</description></item><item><title>Application Client Access</title><link>/projects/shenyu/register-center-design/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/register-center-design/</guid><description>Application client access means to access your microservice to ShenYu gateway, currently supports HTTP, Dubbo, Spring Cloud, gRPC, Motan, Sofa, Tars and other protocols access.
Connecting the application client to ShenYu gateway is realized through the registration center, which involves the registration of the client and the synchronization of the server data. The registry supports HTTP, ZooKeeper, Etcd, Consul, and Nacos.
Refer to the client access configuration in the user documentation for Application Client Access Config .</description></item><item><title>Application Client Access Config</title><link>/projects/shenyu/register-center-access/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/register-center-access/</guid><description>Application client access means to access your microservice to ShenYu gateway, currently supports HTTP, Dubbo, Spring Cloud, gRPC, Motan, Sofa, Tars and other protocols access.
Connecting the application client to ShenYu gateway is realized through the registration center, which involves the registration of the client and the synchronization of the server data. The registry supports HTTP, ZooKeeper, Etcd, Consul, and Nacos.
This article describes how to configure the application client to access the Apache ShenYu gateway.</description></item><item><title>Authority Management</title><link>/projects/shenyu/authority-management/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/authority-management/</guid><description>Explanation Manage and control the permissions of requests passing through the Apache ShenYu gateway. Generate AK/SK and use it with the Sign plugin to achieve precise authority control based on URI level. Tutorial First, we can add a piece of authentication information in BasicConfig - Authentication Then configure this authentication information AppName：The application name associated with this account, it can can fill in or choose (data comes from the application name configured in the Metadata).</description></item><item><title>Binary Packages Deployment</title><link>/projects/shenyu/deployment-package/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/deployment-package/</guid><description>This article introduces the deployment of the Apache ShenYu gateway using the binary packages.
Start Apache ShenYu Admin download 2.4.0 download apache-shenyu-admin-bin-2.4.0-RELEASE.tar.gz
unzip apache-shenyu-admin-bin-2.4.0-RELEASE.tar.gz。 go to the bin directory.
use h2 to store data：
&amp;gt; windows: start.bat --spring.profiles.active = h2 &amp;gt; linux: ./start.sh --spring.profiles.active = h2 use MySQL to store data, go to the /conf directory, and modify the configuration of mysql in application.yaml.
&amp;gt; windows: start.</description></item><item><title>Configuration Flow Introduction</title><link>/projects/shenyu/config/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/config/</guid><description>Description This article introduces the flow of synchronizing to the gateway after the data operation of shenyu-admin backend system. Usage User can arbitrary modify data in shenyu-admin backend and this will immediately synchronize to the jvm memory of the gateway. Synchronize the plugin data of ShenYu, selector,rule data, metadata, signature data, etc. All the rules of plugin selectors are dynamically configured and take effect immediately without restarting the service.</description></item><item><title>Context-Path Plugin</title><link>/projects/shenyu/context-path-plugin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/context-path-plugin/</guid><description>Explanation When making invokes to the target service, Apache ShenYu Gateway also allows users to customize the contextPath using the context_path plugin. Plugin Setting In shenyu-admin &amp;ndash;&amp;gt; BasicConfig &amp;ndash;&amp;gt; Plugin &amp;ndash;&amp;gt; context_path , set to enable. Introduce context_path support in the pom.xml file of the gateway. If the user don&amp;rsquo;t use, please disable the plugin in the background. &amp;lt;!-- apache shenyu context_path plugin start--&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.</description></item><item><title>Custom Deployment</title><link>/projects/shenyu/deployment-custom/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/deployment-custom/</guid><description>This article describes how to build your own gateway based on Apache ShenYu.
Start Apache ShenYu Admin docker reference docker deployment Apache ShenYu Admin
liunx/windows reference binary packages deployment Apache ShenYu Admin
Build your own gateway (recommended) first create an empty springboot project, you can refer to shenyu-bootstrap, or you can create it on spring official website.
introduce the following jar package:
&amp;lt;dependencies&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.</description></item><item><title>Custom Filter</title><link>/projects/shenyu/custom-filter/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/custom-filter/</guid><description>Description This doc shows a demo for how to extend org.springframework.web.server.WebFliter. CORS Support org.apache.shenyu.web.filter.CrossFilter is designed for WebFilter implementation. public class CrossFilter implements WebFilter { private static final String ALLOWED_HEADERS = &amp;quot;x-requested-with, authorization, Content-Type, Authorization, credential, X-XSRF-TOKEN,token,username,client&amp;quot;; private static final String ALLOWED_METHODS = &amp;quot;*&amp;quot;; private static final String ALLOWED_ORIGIN = &amp;quot;*&amp;quot;; private static final String ALLOWED_EXPOSE = &amp;quot;*&amp;quot;; private static final String MAX_AGE = &amp;quot;18000&amp;quot;; @Override @SuppressWarnings(&amp;quot;all&amp;quot;) public Mono&amp;lt;Void&amp;gt; filter(final ServerWebExchange exchange, final WebFilterChain chain) { ServerHttpRequest request = exchange.</description></item><item><title>Custom Plugin</title><link>/projects/shenyu/custom-plugin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/custom-plugin/</guid><description>Description Plugins are core executors of Apache ShenYu gateway. Every plugin handles matched requests when enabled. There are two kinds of plugins in the Apache ShenYu gateway. The first type is a chain with single responsibility, and can not custom filtering of traffic. The other one can do its own chain of responsibility for matched traffic. You could reference from shenyu-plugin module and develop plugins by yourself.</description></item><item><title>Custom Response</title><link>/projects/shenyu/custom-result/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/custom-result/</guid><description>Description This doc offers examples for customising response structure in Apache ShenYu gateway. The response body structure in gateways should be unified, it is recommended for specify yours. Default Implementation The default implementation class is org.apache.shenyu.plugin.api.result.DefaultShenyuResult. Following is the response structure: public class ShenyuDefaultEntity implements Serializable { private static final long serialVersionUID = -2792556188993845048L; private Integer code; private String message; private Object data; } The returned json as follows:</description></item><item><title>Custom Sign Algorithm</title><link>/projects/shenyu/custom-sign-algorithm/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/custom-sign-algorithm/</guid><description>Description Users can customize the signature authentication algorithm to achieve verification. Extension The default implementation is org.apache.shenyu.plugin.sign.service.DefaultSignService. Declare a new class named CustomSignService and implements org.apache.shenyu.plugin.api.SignService. public interface SignService { /** * Sign verify pair. * * @param exchange the exchange * @return the pair */ Pair&amp;lt;Boolean, String&amp;gt; signVerify(ServerWebExchange exchange); } When returning true in Pair, the sign verification passes. If there&amp;rsquo;s false, the String in Pair will be return to the frontend to show.</description></item><item><title>Data Synchronization Config</title><link>/projects/shenyu/use-data-sync/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/use-data-sync/</guid><description>This document focuses on how to use different data synchronization strategies. Data synchronization refers to the strategy used to synchronize data to ShenYu gateway after shenyu-admin background operation data. ShenYu gateway currently supports ZooKeeper, WebSocket, HTTP Long Polling, Nacos, Etcd and Consul for data synchronization.
For details about the data synchronization principles, see Data Synchronization Design in the design document.
WebSocket Synchronization Config（default strategy, recommend） Apache ShenYu gateway config Add these dependencies in pom.</description></item><item><title>Data Synchronization Design</title><link>/projects/shenyu/data-sync/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/data-sync/</guid><description>This document explains the principle of data synchronization. Data synchronization refers to the strategy used to synchronize data to ShenYu gateway after shenyu-admin background operation data. ShenYu gateway currently supports ZooKeeper, WebSocket, HTTP Long Polling, Nacos, Etcd and Consul for data synchronization.
See Data Synchronization Configuration for configuration information about data synchronization.
Preface Gateway is the entrance of request and it is a very important part in micro service architecture, therefore the importance of gateway high availability is self-evident.</description></item><item><title>Dict Management</title><link>/projects/shenyu/dictionary-management/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/dictionary-management/</guid><description>Explanation This document will introduce the use of dictionary management in the Apache ShenYu background management system. Dictionary management is primarily used to maintain and manage common data dictionaries.
Please refer to the deployment document, choose a way to start shenyu-admin. For example, local deployment. After startup, visit http://localhost:9095, the default username and password are: admin and 123456 .
The current usage scenario is in the pluginHandle , when the data type is selected as the dropdown:</description></item><item><title>Divide Plugin</title><link>/projects/shenyu/divide-plugin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/divide-plugin/</guid><description>Explanation Divide is the core processing plugin for gateway to process http requests. Plugin Setting Add related dependencies and enable plugin, please refer to: Quick start http
Http client access, please refer to：Http proxy。
Plugin detail The divide plugin is a plugin for forward proxying of http. All requests of the http type are called by the plugin for load balancing.
After the client connects to the Apache ShenYu gateway, it will automatically register the selector and rule information.</description></item><item><title>Doc Download</title><link>/projects/shenyu/download/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/download/</guid><description>Latest Releases Apache ShenYu is released as source code tarballs with corresponding binary tarballs for convenience.
Apache ShenYu - Version: 2.3.0 ( Release Date: Apr 2, 2020 )
Source Codes
zip
tar
ShenYu-admin Binary Distribution
tar ShenYu-bootstrap Binary Distribution
tar Apache ShenYu Dashboard - Version: 2.3.0 ( Release Date: Apr 2, 2020 )
Source Codes
zip
tar</description></item><item><title>Docker Deployment</title><link>/projects/shenyu/deployment-docker/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/deployment-docker/</guid><description>This article introduces the use of docker to deploy the Apache ShenYu gateway.
Start Apache ShenYu Admin &amp;gt; docker pull apache/shenyu-admin &amp;gt; docker network create shenyu use h2 to store data:
&amp;gt; docker run -d -p 9095:9095 --net shenyu apache/shenyu-admin use MySQL to store data, copy mysql-connector.jar to /$(your_work_dir)/ext-lib：
docker run -v /${your_work_dir}/ext-lib:/opt/shenyu-admin/ext-lib -e &amp;quot;SPRING_PROFILES_ACTIVE=mysql&amp;quot; -e &amp;quot;spring.datasource.url=jdbc:mysql://${your_ip_port}/shenyu?useUnicode=true&amp;amp;characterEncoding=utf-8&amp;amp;useSSL=false&amp;quot; -e &amp;quot;spring.datasource.user=${your_username}&amp;quot; -e &amp;quot;spring.datasource.password=${your_password}&amp;quot; -d -p 9095:9095 --net shenyu apache/shenyu-admin another way is to put the application.</description></item><item><title>Dubbo Plugin</title><link>/projects/shenyu/dubbo-plugin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/dubbo-plugin/</guid><description>Explanation Dubbo is a plugin that converts http protocol into Dubbo protocol and it is also the key for gateway to realize dubbo generic service. Dubbo plugin needs to cooperate with metadata to realize dubbo calls. Apache Dubbo and Alibaba Dubbo users both use the same plugin. Plugin Setting Add related dependencies and enable plugin, please refer to: Quick start with Dubbo .
Dubbo client access, please refer to: Dubbo Proxy .</description></item><item><title>Dubbo Proxy</title><link>/projects/shenyu/dubbo-proxy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/dubbo-proxy/</guid><description>This document is intended to help the Dubbo service access the Apache ShenYu gateway. The Apache ShenYu gateway uses the Dubbo plugin to handle dubbo service.
Support Alibaba Dubbo(&amp;lt; 2.7.x) and Apache Dubbo (&amp;gt;=2.7.x).
Before the connection, start shenyu-admin correctly, start Dubbo plugin, and add related dependencies on the gateway and Dubbo application client. Refer to the previous Quick start with Dubbo .
For details about client access configuration, see Application Client Access Config .</description></item><item><title>Environment Setup</title><link>/projects/shenyu/shenyu-set-up/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/shenyu-set-up/</guid><description>Features Apache ShenYu is an open source plugin framework, which is flexibility and extensibility since 2.2.0 version. With shenyu you can easily create application with your own gateway. System Requirement: JDK 1.8+, Mysql 5.5.20 +. Shenyu-Admin remote download 2.3.0 download shenyu-admin-bin-2.3.0-RELEASE.tar.gz tar shenyu-admin-bin-2.3.0-RELEASE.tar.gz. cd /bin. use h2 store. &amp;gt; windwos : start.bat --spring.profiles.active = h2 &amp;gt; linux : ./start.sh --spring.profiles.active = h2 use mysql store. cd /conf and then modify</description></item><item><title>Fetching Correct IP Address And Host</title><link>/projects/shenyu/custom-parsing-ip-and-host/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/custom-parsing-ip-and-host/</guid><description>Description This doc demonstrates how to get correct IP address and host when Apache ShenYu serves behind nginx reverse proxy. After fetched real IP and host, you can match them with plugins and selectors. Default Implementation The embedded implementation in Apache ShenYu is :org.apache.shenyu.web.forward.ForwardedRemoteAddressResolver.
You need to config X-Forwarded-For in nginx first to get correct IP address and host.
Implement through a Plugin Declare a new class named CustomRemoteAddressResolver and implements org.</description></item><item><title>File Upload And Download</title><link>/projects/shenyu/file-and-image/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/file-and-image/</guid><description> description This doc gives a brief description for upload and download files using Apache ShenYu. File Upload The default file size limit is 10M. For custom limitation, use--file.size with an integer variable. e.g.--file.size = 30 Upload your files just as way you did before File Download Apache ShenYu supports download files in stream. There is no need to change anything.</description></item><item><title>Flow Control</title><link>/projects/shenyu/flow-control/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/flow-control/</guid><description>ShenYu gateway realizes flow control through plugins, selectors and rules. For related data structure, please refer to the previous Apache ShenYu Admin Database Design .
Plugin In Apache ShenYu Admin System, each plugin uses Handle (JSON format) fields to represent different processing, and the plugin processing is used to manage and edit the custom processing fields in the JSON.
The main purpose of this feature is to enable plugins to handle templated configurations.</description></item><item><title>Helm Deployment</title><link>/projects/shenyu/deployment-helm/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/deployment-helm/</guid><description>This article introduces the use of helm to deploy the Apache ShenYu gateway.</description></item><item><title>Http Proxy</title><link>/projects/shenyu/http-proxy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/http-proxy/</guid><description>This document is intended to help the Http service access the Apache ShenYu gateway. The Apache ShenYu gateway uses the Divide plugin to handle Http requests.
Before the connection, start shenyu-admin correctly, start Divide plugin, and add related dependencies on the gateway and Http application client. Refer to the previous Quick start with Http .
For details about client access configuration, see Application Client Access Config .
For details about data synchronization configurations, see Data Synchronization Config .</description></item><item><title>Hystrix Plugin</title><link>/projects/shenyu/hystrix-plugin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/hystrix-plugin/</guid><description>Description Hystrix plugin is the core implementation used by gateway to fuse traffic. Support thread and semaphore . Plugin Setting Select a mode to start shenyu-admin. For details, see deployment. For example, with Local Deployment starts the Apache ShenYu background management system.
In BasicConfig &amp;ndash;&amp;gt; Plugin &amp;ndash;&amp;gt; hystrix, set to enable. If the user don&amp;rsquo;t use, please disable the plugin in the background. Add hystrix plugin dependency Add hystrix dependency in the pom.</description></item><item><title>JWT plugin</title><link>/projects/shenyu/jwt-plugin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/jwt-plugin/</guid><description>Description The jwt plug-in is for the token attribute or authorization of the http request header to carry the attribute value for authentication judgment and judge OAuth2.0 . Plugin Setting Please refer to the deployment document, choose a way to start shenyu-admin. For example, through Local Deployment to start the Apache ShenYu management system .
In shenyu-admin BasicConfig &amp;ndash;&amp;gt; plugin -&amp;gt; jwt set to enable. If you don&amp;rsquo;t want to use this function, please disable this plugin in the shenyu-admin.</description></item><item><title>Local Deployment</title><link>/projects/shenyu/deployment-local/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/deployment-local/</guid><description>This article introduces how to start the Apache ShenYu gateway in the local environment.
Environmental preparation Install JDK1.8+ locally Install Git locally Install Maven locally Choose a development tool, such as IDEA Download the compiled code Download
&amp;gt; git clone https://github.com/apache/incubator-shenyu.git &amp;gt; cd shenyu &amp;gt; mvn clean install -Dmaven.javadoc.skip=true -B -Drat.skip=true -Djacoco.skip=true -DskipITs -DskipTests use the development tool to start org.apache.shenyu.admin.ShenyuAdminBootstrap，Visit http://localhost:9095, the default username and password are: admin and 123456 respectively.</description></item><item><title>Logging Plugin</title><link>/projects/shenyu/logging-plugin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/logging-plugin/</guid><description>Description When making invokes to the target service, Apache ShenYu gateway also allows users to print the request information in the log that includes the request path, request method, request parameters, response header, response body &amp;hellip;etc. Plugin Setting In shenyu-admin &amp;ndash;&amp;gt; BasicConfig &amp;ndash;&amp;gt; Plugin &amp;ndash;&amp;gt; logging, set to enable. Introduce logging support in the pox.xml file of the gateway. If the user don&amp;rsquo;t use, please disable the plugin in the background.</description></item><item><title>MetaData Concept Design</title><link>/projects/shenyu/meta-data/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/meta-data/</guid><description>Description This article mainly explains the concept,design of metadata and how to connect in the Apache ShenYu Gateway. Technical Solutions Add a new table in the database,and data can synchronize to the JVM memory of gateway according to the data synchronization scheme.
Table Structure:
CREATE TABLE IF NOT EXISTS `meta_data` ( `id` varchar(128) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT &#39;id&#39;, `app_name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT &#39;application name&#39;, `path` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT &#39;path,not repeatable&#39;, `path_desc` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT &#39;path description&#39;, `rpc_type` varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT &#39;rpc type&#39;, `service_name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT &#39;service name&#39;, `method_name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT &#39;method name&#39;, `parameter_types` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT &#39;multiple parameter types, split by comma&#39;, `rpc_ext` varchar(1024) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL COMMENT &#39;rpc extension information,json format&#39;, `date_created` datetime(0) NOT NULL COMMENT &#39;create date&#39;, `date_updated` datetime(0) NOT NULL ON UPDATE CURRENT_TIMESTAMP(0) COMMENT &#39;update date&#39;, `enabled` tinyint(4) NOT NULL DEFAULT 0 COMMENT &#39;enable status&#39;, PRIMARY KEY (`id`) USING BTREE ) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_unicode_ci ROW_FORMAT = Dynamic; Metadata design as below,the most important is using it in dubbo&amp;rsquo;s generalization call.</description></item><item><title>ModifyResponse Plugin</title><link>/projects/shenyu/modify-response-plugin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/modify-response-plugin/</guid><description>Description modifyResponse is a native plugin of Apache ShenYu gateway and is used to edit response header and body and statusCode. Plugin Setting In shenyu-admin &amp;ndash;&amp;gt; BasicConfig &amp;ndash;&amp;gt; Plugin &amp;ndash;&amp;gt; modifyResponse , set to enable. Plugin Use Introduce modifyResponse dependency in the pom.xml file of the gateway. &amp;lt;!-- apache shenyu modify response plugin start--&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.apache.shenyu&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;shenyu-spring-boot-starter-plugin-modify-response&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;${project.version}&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;!-- apache shenyu modify response plugin end--&amp;gt; Selectors and rules, please refer to:Selector And Rule Config。 only those matched requests can be modified response.</description></item><item><title>Monitor Plugin</title><link>/projects/shenyu/monitor-plugin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/monitor-plugin/</guid><description>Description Monitor plugin is used to monitor its own running status(JVM-related) by gateway, include request response delay, QPS, TPS, and other related metrics. Technical Solutions Flow Diagram Make even tracking in ShenYu Gateway by asynchronous or synchronous mode.
The prometheus server pulls metrics&amp;rsquo; through http request, and then displays it by Grafana.
Plugin Setting In shenyu-admin&amp;ndash;&amp;gt; BasicConfig &amp;ndash;&amp;gt; Plugin &amp;ndash;&amp;gt; monitor, set to enable.</description></item><item><title>Motan Plugin</title><link>/projects/shenyu/motan-plugin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/motan-plugin/</guid><description>Description The motan plugin is a plugin that converts the Http protocol into the motan protocol. Plugin Setting Add related dependencies and enable plugin, please refer to: Quick start with Motan .
Motan client access, please refer to: Motan Proxy .
Plugin Detail After the client accesses the Apache ShenYu gateway, it will automatically register the selector and rule information.
You can see it in PluginList -&amp;gt; rpc proxy -&amp;gt; motan.</description></item><item><title>Motan Proxy</title><link>/projects/shenyu/motan-proxy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/motan-proxy/</guid><description>This document is intended to help the Motan service access the Apache ShenYu gateway. The Apache ShenYu gateway uses the Motan plugin to handle motan service.
Before the connection, start shenyu-admin correctly, start Motan plugin, and add related dependencies on the gateway and Motan application client. Refer to the previous Quick start with Motan .
For details about client access configuration, see Application Client Access Config .
For details about data synchronization configurations, see Data Synchronization Config .</description></item><item><title>OAuth2 Plugin</title><link>/projects/shenyu/oauth2-plugin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/oauth2-plugin/</guid><description>Description The OAuth2 plugin is implemented using Webflux OAuth2, used to support OAuth protocol. Plugin Setting Please refer to the deployment document, choose a way to start shenyu-admin. For example, Local Deployment.
In shenyu-admin BasicConfig &amp;ndash;&amp;gt; plugin -&amp;gt; oauth2 set to enable. If you don&amp;rsquo;t want to use this function, please disable this plugin in the shenyu-admin. Add configuration mode in plugin editing. Plugin Use Add support for oauth2 to the pom file of the gateway &amp;lt;!</description></item><item><title>Param-mapping Plugin</title><link>/projects/shenyu/param-mapping-plugin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/param-mapping-plugin/</guid><description>Description param_mapping is a native plugin of Apache ShenYu Gateway and is used to edit your request param. Plugin Setting In shenyu-admin &amp;ndash;&amp;gt; BasicConfig &amp;ndash;&amp;gt; Plugin &amp;ndash;&amp;gt; param_mapping , set to enable. Plugin Use Introduce param_mapping dependency in the pom.xml file of the gateway. &amp;lt;!-- apache shenyu param_mapping plugin start--&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.apache.shenyu&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;shenyu-spring-boot-starter-plugin-param-mapping&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;${project.version}&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;!-- apache shenyu param_mapping plugin end--&amp;gt; Selectors and rules, please refer to:Selector And Rule Config。</description></item><item><title>Plugin Config</title><link>/projects/shenyu/plugin-handle-explanation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/plugin-handle-explanation/</guid><description>Explanation This document will introduce the use of plugins in the shenyu-admin , including plugin management and plugin handle management.
Please refer to the deployment document, choose a way to start shenyu-admin. For example, local deployment. After startup, visit http://localhost:9095, the default username and password are: admin and 123456 .
Plugin management In the plugin management, you can manage all plugins in a unified manner, such as turning off or turning on plugins:</description></item><item><title>Quick start with Dubbo</title><link>/projects/shenyu/quick-start-dubbo/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/quick-start-dubbo/</guid><description>This document introduces how to quickly access the Apache ShenYu gateway using Dubbo. You can get the code example of this document by clicking here.
Environment to prepare Please refer to the deployment to select a way to start shenyu-admin. For example, start the Apache ShenYu gateway management system through local deployment .
After successful startup, you need to open the Dubbo plugin on in the BasicConfig -&amp;gt; Plugin, and set your registry address.</description></item><item><title>Quick start with Http</title><link>/projects/shenyu/quick-start-http/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/quick-start-http/</guid><description>This document introduces how to quickly access the Apache ShenYu gateway using Http. You can get the code example of this document by clicking here.
Environment to prepare Please refer to the deployment to select a way to start shenyu-admin. For example, start the Apache ShenYu gateway management system through local deployment .
After successful startup, you need to open the Divide plugin on in the BasicConfig -&amp;gt; Plugin. In the Apache ShenYu gateway, the HTTP request is handled by the Divide plugin.</description></item><item><title>Quick start with Motan</title><link>/projects/shenyu/quick-start-motan/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/quick-start-motan/</guid><description>This document introduces how to quickly access the Apache ShenYu gateway using Motan RPC. You can get the code example of this document by clicking here.
Environment to prepare Please refer to the deployment to select a way to start shenyu-admin. For example, start the Apache ShenYu gateway management system through local deployment .
After successful startup, you need to open the Sofa plugin on in the BasicConfig -&amp;gt; Plugin.</description></item><item><title>Quick start with Sofa</title><link>/projects/shenyu/quick-start-sofa/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/quick-start-sofa/</guid><description>This document introduces how to quickly access the Apache ShenYu gateway using Sofa RPC. You can get the code example of this document by clicking here.
Environment to prepare Please refer to the deployment to select a way to start shenyu-admin. For example, start the Apache ShenYu gateway management system through local deployment .
After successful startup, you need to open the Sofa plugin on in the BasicConfig -&amp;gt; Plugin, and set your registry address.</description></item><item><title>Quick start with Spring Cloud</title><link>/projects/shenyu/quick-start-springcloud/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/quick-start-springcloud/</guid><description>This document introduces how to quickly access the Apache ShenYu gateway using Spring Cloud. You can get the code example of this document by clicking here .
Environment to prepare Please refer to the deployment to select a way to start shenyu-admin. For example, start the Apache ShenYu gateway management system through local deployment .
After successful startup, you need to open the springCloud plugin on in the BasicConfig -&amp;gt; Plugin.</description></item><item><title>Quick start with Tars</title><link>/projects/shenyu/quick-start-tars/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/quick-start-tars/</guid><description>This document introduces how to quickly access the Apache ShenYu Gateway using Tars. You can get the code example of this document by clicking here .
Environment to prepare Please refer to the deployment to select a way to start shenyu-admin. For example, start the Apache ShenYu gateway management system through local deployment .
After successful startup, you need to open the Sofa plugin on in the BasicConfig -&amp;gt; Plugin.</description></item><item><title>Quick start with gRPC</title><link>/projects/shenyu/quick-start-grpc/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/quick-start-grpc/</guid><description>This document introduces how to quickly access the Apache ShenYu gateway using gRPC. You can get the code example of this document by clicking here .
Prepare For Environment Please refer to the deployment to select a way to start shenyu-admin. For example, start the Apache ShenYu gateway management system through local deployment .
After successful startup, you need to open the gRPC plugin on in the BasicConfig -&amp;gt; Plugin.</description></item><item><title>RateLimiter Plugin</title><link>/projects/shenyu/rate-limiter-plugin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/rate-limiter-plugin/</guid><description>Description RateLimiter is core implementation of gateway restrictions on network traffic.
the Apache ShenYu gateway provides a variety of current limiting algorithms, including token bucket algorithm, concurrent token bucket algorithm, leaky bucket algorithm and sliding time window algorithm.
The implementation of current limiting algorithm of Apache ShenYu gateway is based on redis.
You can set to the interface level, or the parameter level. How to use it depends on your traffic configuration.</description></item><item><title>Redirect Plugin</title><link>/projects/shenyu/redirect-plugin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/redirect-plugin/</guid><description>Explanation When the Apache ShenYu gateway makes proxy calls to the target service, it also allows users to use the redirect plugin to redirect requests.
Plugin Setting In shenyu-admin &amp;ndash;&amp;gt; BasicConfig &amp;ndash;&amp;gt; Plugin &amp;ndash;&amp;gt; redirect , set to enable. Introduce redirect support in the pox.xml file of the gateway. If the user don&amp;rsquo;t use, please disable the plugin in the background. Selectors and rules, only matching requests will be forwarded and redirected, please see: Selector And Rule Config。 Maven Dependency Add the plugin dependency in the pom.</description></item><item><title>RequestPlugin</title><link>/projects/shenyu/request-plugin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/request-plugin/</guid><description>Explanation When ShenYu gateway makes proxy call to target service, it also allows users to add, modify and remove request headers by using &amp;lsquo;request&amp;rsquo; plugin to request parameters, request headers and cookies. Plugin Setting In shenyu-admin &amp;ndash;&amp;gt; BasicConfig &amp;ndash;&amp;gt; Plugin &amp;ndash;&amp;gt; request , set to enable. Introduce request support in the pox.xml file of the gateway. If the user don&amp;rsquo;t use, please disable the plugin in the background.</description></item><item><title>Resilience4j Plugin</title><link>/projects/shenyu/resilience4j-plugin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/resilience4j-plugin/</guid><description>Description Resilience4j is one of the options that supports flow control and circuit breaking. Resilience4j supports flow control and circuit breaking functions for gateway. Plugin Setting Select a mode to start shenyu-admin. For details, see deployment. For example, with Local Deployment starts the Apache ShenYu background management system.
In BasicConfig &amp;ndash;&amp;gt; Plugin &amp;ndash;&amp;gt; resilience4j, set to enable. If the user don&amp;rsquo;t use, please disable the plugin in the background.</description></item><item><title>Rewrite Plugin</title><link>/projects/shenyu/rewrite-plugin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/rewrite-plugin/</guid><description>Explanation When making proxy invokes to the target service, Apache ShenYu gateway also allows users to rewrite the request path using the rewrite plugin. Plugin Setting In shenyu-admin &amp;ndash;&amp;gt; BasicConfig &amp;ndash;&amp;gt; Plugin &amp;ndash;&amp;gt; rewrite , set to enable. Add rewrite support in the pom.xml file of the gateway. If the user don&amp;rsquo;t use, please disable the plugin in the background. &amp;lt;!-- apache shenyu rewrite plugin start--&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.</description></item><item><title>SPI Design</title><link>/projects/shenyu/spi-design/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/spi-design/</guid><description>&amp;lsquo;SPI&amp;rsquo;, called &amp;lsquo;Service Provider Interface&amp;rsquo;, is a built-in JDK Service that provides discovery function and a dynamic replacement discovery mechanism. shenyu-spi 是Apache ShenYu网关自定义的SPI扩展实现，设计和实现原理参考了Dubbo的 SPI扩展实</description></item><item><title>Selector And Rule Config</title><link>/projects/shenyu/selector-and-rule/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/selector-and-rule/</guid><description>Features This document will introduce the use of selectors and rules in the Apache ShenYu background management system. For the concept and design of selectors and rules, please refer to Flow Control.
Please refer to the deployment document, choose a way to start shenyu-admin. For example, local deployment. After startup, visit http://localhost:9095, the default username and password are: admin and 123456 .
Selector All plugins are displayed in the PluginList, and selectors and rules can be added to each plugin:</description></item><item><title>Sentinel Plugin</title><link>/projects/shenyu/sentinel-plugin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/sentinel-plugin/</guid><description>Description Sentinel is one of the options that supports flow control and circuit breaking. Sentinel supports flow control and circuit breaking functions for gateway. Plugin Setting Select a mode to start shenyu-admin. For details, see deployment. For example, with Local Deployment starts the Apache ShenYu background management system.
In BasicConfig &amp;ndash;&amp;gt; Plugin &amp;ndash;&amp;gt; sentinel, set to enable. If the user don&amp;rsquo;t use, please disable the plugin in the background.</description></item><item><title>ShenYu Optimize</title><link>/projects/shenyu/shenyu-optimize/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/shenyu-optimize/</guid><description>Description This doc shows how to do performance optimization for Apache ShenYu. Time Consumption Apache ShenYu is JVM driven and processing time for a single request is nearly between 1-3 ms. Netty Optimization spring-webflux is one of dependencies of ShenYu, and it uses Netty in lower layer. The demo down below demonstrates tuning ShenYu by customizing params in Netty. @Bean public NettyReactiveWebServerFactory nettyReactiveWebServerFactory() { NettyReactiveWebServerFactory webServerFactory = new NettyReactiveWebServerFactory(); webServerFactory.</description></item><item><title>Sign Plugin</title><link>/projects/shenyu/sign-plugin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/sign-plugin/</guid><description>Description Sign is a native plugin of Apache ShenYu Gateway and is used to process signature authentication of requests. Plugin Setting Please refer to the deployment document, choose a way to start shenyu-admin. For example, through Local Deployment to start the Apache ShenYu management system.
In shenyu-admin BasicConfig &amp;ndash;&amp;gt; plugin -&amp;gt; sign set to enable. If you don&amp;rsquo;t want to use this function, please disable this plugin in the shenyu-admin.</description></item><item><title>Sofa Plugin</title><link>/projects/shenyu/sofa-plugin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/sofa-plugin/</guid><description>Description The sofa plugin is a plugin that converts the Http protocol into the sofa protocol, and it is also the key to the gateway to realize the sofa generalization call. The sofa plugin needs to cooperate with metadata to realize the call of Sofa. Plugin Setting Add related dependencies and enable plugin, please refer to: Quick start with Sofa .
Sofa client access, please refer to: Sofa Proxy .</description></item><item><title>Sofa Proxy</title><link>/projects/shenyu/sofa-rpc-proxy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/sofa-rpc-proxy/</guid><description>This document is intended to help the Sofa service access the Apache ShenYu gateway. The Apache ShenYu gateway uses the Sofa plugin to handle sofa service.
Before the connection, start shenyu-admin correctly, start Sofa plugin, and add related dependencies on the gateway and Sofa application client. Refer to the previous Quick start with Sofa .
For details about client access configuration, see Application Client Access Config .
For details about data synchronization configurations, see Data Synchronization Config .</description></item><item><title>Spring Cloud Plugin</title><link>/projects/shenyu/spring-cloud-plugin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/spring-cloud-plugin/</guid><description>Explanation This plugin is the core of transforming http protocol into springCloud protocol. Introducing Plugin Support of SpringCould Gateway Introducing those dependencies in the pom.xml file of the gateway. &amp;lt;!-- apache shenyu springCloud plugin start--&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.apache.shenyu&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;shenyu-spring-boot-starter-plugin-springcloud&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;${project.version}&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.apache.shenyu&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;shenyu-spring-boot-starter-plugin-httpclient&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;${project.version}&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;!-- apache shenyu springCloud plugin end--&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.springframework.cloud&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;spring-cloud-commons&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;2.2.0.RELEASE&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.springframework.cloud&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;spring-cloud-starter-netflix-ribbon&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;2.2.0.RELEASE&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; Plugin Setting Add related dependencies and enable plugin, please refer to: Quick start with Spring Cloud .</description></item><item><title>Spring Cloud Proxy</title><link>/projects/shenyu/spring-cloud-proxy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/spring-cloud-proxy/</guid><description>This document is intended to help the Spring Cloud service access the Apache ShenYu gateway. The Apache ShenYu gateway uses the springCloud plugin to handle Spring Cloud service.
Before the connection, start shenyu-admin correctly, start springCloud plugin, and add related dependencies on the gateway and springCloud application client. Refer to the previous Quick start with Spring Cloud .
For details about client access configuration, see Application Client Access Config .</description></item><item><title>Tars Plugin</title><link>/projects/shenyu/tars-plugin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/tars-plugin/</guid><description>Description The tars plugin is a plugin that converts the Http protocol into the tars protocol. Plugin Setting Add related dependencies and enable plugin, please refer to: Quick start with Tars .
Tars client access, please refer to: Tars Proxy .
Plugin Detail After the client accesses the Apache ShenYu gateway, it will automatically register the selector and rule information. You can see it in PluginList -&amp;gt; rpc proxy -&amp;gt; tars.</description></item><item><title>Tars Proxy</title><link>/projects/shenyu/tars-proxy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/tars-proxy/</guid><description>This document is intended to help the Tars service access the Apache ShenYu gateway. The Apache ShenYu gateway uses the tars plugin to handle tars service. Before the connection, start shenyu-admin correctly, start tars plugin, and add related dependencies on the gateway and tars application client. Refer to the previous Quick start with Tars . For details about client access configuration, see Application Client Access Config . For details about</description></item><item><title>Thread Model</title><link>/projects/shenyu/thread/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/thread/</guid><description>Description This article gives an introduction to thread models in ShenYu and usage in various scenarios. IO And Work Thread spring-webflux is one of dependencies of ShenYu, and it uses Netty thread model in lower layer. Business Thread Use scheduling thread to execute by default. A fixed thread pool manages business threads, the number of threads is count in this formula: cpu * 2 + 1.</description></item><item><title>Waf Plugin</title><link>/projects/shenyu/waf-plugin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/waf-plugin/</guid><description>Description Waf is the core implementation of gateway to realize firewall function for network traffic. Plugin Setting Please refer to the deployment document, choose a way to start shenyu-admin. For example, through Local Deployment to start the Apache ShenYu management system.
In shenyu-admin BasicConfig &amp;ndash;&amp;gt; plugin -&amp;gt; waf set to enable.If you don&amp;rsquo;t want to use this function, please disable this plugin in the shenyu-admin. Add configuration mode in plugin editing.</description></item><item><title>Websocket Plugin</title><link>/projects/shenyu/websocket-plugin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/websocket-plugin/</guid><description>Explanation Apache ShenYu gateway also support proxy of websocket. In websocket support, divide plugin is used in it. Plugin Setting In shenyu-admin &amp;ndash;&amp;gt; plugin management &amp;ndash;&amp;gt; divide, set to enable. Introducing dependencies in the pom.xml file of the gateway &amp;lt;!--if you use http proxy start this--&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.apache.shenyu&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;shenyu-spring-boot-starter-plugin-divide&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;${last.version}&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.apache.shenyu&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;shenyu-spring-boot-starter-plugin-httpclient&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;${last.version}&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; Request Path When using shenyu proxy websocket, its request path is (example):ws://localhost:9195/?</description></item><item><title>gRPC Plugin</title><link>/projects/shenyu/grpc-plugin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/grpc-plugin/</guid><description>Description The grpc plugin is a plugin that converts the Http protocol into the grpc protocol. Plugin Setting Add related dependencies and enable plugin, please refer to: Quick start with gRPC .
gRPC client access, please refer to: gRPC Proxy .
Plugin Detail After the client accesses the Apache ShenYu gateway, it will automatically register the selector and rule information. You can see it in PluginList -&amp;gt; rpc proxy -&amp;gt; grpc.</description></item><item><title>gRPC Proxy</title><link>/projects/shenyu/grpc-proxy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/grpc-proxy/</guid><description>This document is intended to help the gRPC service access the Apache ShenYu gateway. The Apache ShenYu gateway uses the gRPC plugin to handle gRPC service.
Before the connection, start shenyu-admin correctly, start gRPC plugin, and add related dependencies on the gateway and gRPC application client. Refer to the previous Quick start with gRPC .
For details about client access configuration, see Application Client Access Config .
For details about data synchronization configurations, see Data Synchronization Config .</description></item><item><title>k8s Deployment</title><link>/projects/shenyu/deployment-k8s/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/deployment-k8s/</guid><description>This article introduces the use of k8s to deploy the Apache ShenYu gateway.</description></item><item><title>release-notes</title><link>/projects/shenyu/release-notes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/projects/shenyu/release-notes/</guid><description>2.3.0 soul-admin Add open field to allow app path authentication or not in sign plugin. Optimize divide plugin to use common plugin template in soul-dashboard. Add default values and rule checks in plugin handler. Add resource management to allow user to add plugin, adjust menu and button resource and so on in soul-dashboard and soul-admin. Add menu and data permission in soul-admin. Add H2 stroe for soul-admin soul-bootstrap Add tars plugin Add sentinel plugin &amp;ndash; Add sofa plugin Add Resilience4j plugin for soul-plugin.</description></item></channel></rss>