"use strict";(self.webpackChunkshenyu_website=self.webpackChunkshenyu_website||[]).push([[4808],{3905:function(e,t,a){a.d(t,{Zo:function(){return m},kt:function(){return h}});var n=a(7294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var p=n.createContext({}),u=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},m=function(e){var t=u(e.components);return n.createElement(p.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,r=e.originalType,p=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),c=u(a),h=i,d=c["".concat(p,".").concat(h)]||c[h]||s[h]||r;return a?n.createElement(d,l(l({ref:t},m),{},{components:a})):n.createElement(d,l({ref:t},m))}));function h(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=a.length,l=new Array(r);l[0]=c;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:i,l[1]=o;for(var u=2;u<r;u++)l[u]=a[u];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},4683:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return o},contentTitle:function(){return p},metadata:function(){return u},toc:function(){return m},default:function(){return c}});var n=a(7462),i=a(3366),r=(a(7294),a(3905)),l=["components"],o={title:"Selector And Rule Config",keywords:["Selector","Rule"],description:"detailed explanation of selector and rule"},p=void 0,u={unversionedId:"user-guide/admin-usage/selector-and-rule",id:"user-guide/admin-usage/selector-and-rule",isDocsHomePage:!1,title:"Selector And Rule Config",description:"detailed explanation of selector and rule",source:"@site/docs/user-guide/admin-usage/selector-and-rule.md",sourceDirName:"user-guide/admin-usage",slug:"/user-guide/admin-usage/selector-and-rule",permalink:"/docs/next/user-guide/admin-usage/selector-and-rule",editUrl:"https://github.com/apache/incubator-shenyu-website/edit/main/docs/user-guide/admin-usage/selector-and-rule.md",version:"current",frontMatter:{title:"Selector And Rule Config",keywords:["Selector","Rule"],description:"detailed explanation of selector and rule"},sidebar:"tutorialSidebar",previous:{title:"Plugin Config",permalink:"/docs/next/user-guide/admin-usage/plugin-handle-explanation"},next:{title:"Admin Property Config",permalink:"/docs/next/user-guide/property-config/admin-property-config"}},m=[{value:"Features",id:"features",children:[]},{value:"Selector",id:"selector",children:[]},{value:"Rule",id:"rule",children:[]},{value:"Condition Explanation",id:"condition-explanation",children:[]}],s={toc:m};function c(e){var t=e.components,a=(0,i.Z)(e,l);return(0,r.kt)("wrapper",(0,n.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"features"},"Features"),(0,r.kt)("p",null,"This document will introduce the use of selectors and rules in the Apache ShenYu background management system. For the concept and design of selectors and rules, please refer to ",(0,r.kt)("inlineCode",{parentName:"p"},"Flow Control"),"."),(0,r.kt)("img",{src:"/img/shenyu/dataSync/flow-control-en.png",width:"60%",height:"50%"}),(0,r.kt)("p",null,"Please refer to the ",(0,r.kt)("inlineCode",{parentName:"p"},"deployment")," document, choose a way to start ",(0,r.kt)("inlineCode",{parentName:"p"},"shenyu-admin"),". For example, ",(0,r.kt)("a",{parentName:"p",href:"../../deployment/deployment-local"},"local deployment"),". After startup, visit ",(0,r.kt)("inlineCode",{parentName:"p"},"http://localhost:9095"),", the default username and password are: ",(0,r.kt)("inlineCode",{parentName:"p"},"admin")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"123456")," ."),(0,r.kt)("h2",{id:"selector"},"Selector"),(0,r.kt)("p",null,"All plugins are displayed in the PluginList, and selectors and rules can be added to each plugin:"),(0,r.kt)("img",{src:"/img/shenyu/basicConfig/pluginHandle/selector_rule_page_en.jpg",width:"80%",height:"80%"}),(0,r.kt)("p",null,"For example, add a selector to the ",(0,r.kt)("inlineCode",{parentName:"p"},"divide")," plugin:"),(0,r.kt)("img",{src:"/img/shenyu/basicConfig/pluginHandle/divide_selector_config_en.jpg",width:"80%",height:"80%"}),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"selector detailed explanation\uff1a"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Name: create your selector with a distinguish name."),(0,r.kt)("li",{parentName:"ul"},"Type: Choose request matching strategy.",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"custom"),": Only handle requests that meet the following matching conditions."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"full"),": Handle all requests."))),(0,r.kt)("li",{parentName:"ul"},"MatchType: Condition combination type.",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"and"),"\uff1a Need to meet all conditions."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"or"),": Meet any of the conditions."))),(0,r.kt)("li",{parentName:"ul"},"Conditions\uff1a",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"uri: filter request with uri."),(0,r.kt)("li",{parentName:"ul"},"header: filter request with request header."),(0,r.kt)("li",{parentName:"ul"},"query: filter request with query string."),(0,r.kt)("li",{parentName:"ul"},"ip: filter request with your real ip."),(0,r.kt)("li",{parentName:"ul"},"host: filter request with your real host."),(0,r.kt)("li",{parentName:"ul"},"post: not recommend to use."),(0,r.kt)("li",{parentName:"ul"},"cookie: filter request with cookie."),(0,r.kt)("li",{parentName:"ul"},"req_method: filter request with request method."),(0,r.kt)("li",{parentName:"ul"},"condition match:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"match : fuzzy string matching\uff0crecommend to combine with uri\uff0csupport path-matching.\uff08/test/**)."),(0,r.kt)("li",{parentName:"ul"},"= : matches only if they are equal."),(0,r.kt)("li",{parentName:"ul"},"regEx : regex matching\uff0cmatch characters in regex expression."),(0,r.kt)("li",{parentName:"ul"},"like : string fuzzy matching."),(0,r.kt)("li",{parentName:"ul"},"contains: when it contains the specified value, it matches."),(0,r.kt)("li",{parentName:"ul"},"SpEl: SpEl expression matches."),(0,r.kt)("li",{parentName:"ul"},"Groovy: match through Groovy."),(0,r.kt)("li",{parentName:"ul"},"TimeBefore: before the specified time."),(0,r.kt)("li",{parentName:"ul"},"TimeAfter: after the specified time."))))),(0,r.kt)("li",{parentName:"ul"},"Continued: whether the subsequent selector is still executed."),(0,r.kt)("li",{parentName:"ul"},"PrintLogs: it will print the matching log with the open option enabled."),(0,r.kt)("li",{parentName:"ul"},"Enable: whether to enable the plugin."),(0,r.kt)("li",{parentName:"ul"},"Order\uff1athe smaller will have high priorty to execute among multi-selectors."),(0,r.kt)("li",{parentName:"ul"},"Handler: The operation when the request matches the selector."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"the above picture means: when the prefix of the request uri is ",(0,r.kt)("inlineCode",{parentName:"p"},"/http"),", it will redirect to this service ",(0,r.kt)("inlineCode",{parentName:"p"},"127.0.0.1:8080"),".")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"selector advice : combine ",(0,r.kt)("inlineCode",{parentName:"p"},"uri")," conditon and ",(0,r.kt)("inlineCode",{parentName:"p"},"match")," prefix\uff08/contextPath\uff09as the first request filter."))),(0,r.kt)("h2",{id:"rule"},"Rule"),(0,r.kt)("img",{src:"/img/shenyu/basicConfig/pluginHandle/plugin_rule_config_en.jpg",width:"80%",height:"80%"}),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"when the request was passed by the seletor, then it will be processed by the rule, the final filter.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"rule is the final confirmation about how to execute request logically.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"rule detailed explanation\uff1a"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Name\uff1acreate your rule with a distinguish name.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"MatchType: you can combine these conditions with 'and' , 'or' operators.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Conditions\uff1a"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"uri: filter request with uri.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"header: filter request with request header.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"query: filter request with query string.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"ip: filter request with your real ip.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"host: filter request with your real host.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"post: not recommend to use.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"cookie: filter request with cookie.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"req_method: filter request with request method.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"condition match:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"match : fuzzy string matching\uff0crecommend to combine with uri\uff0csupport path-matching.\uff08/test/**)."),(0,r.kt)("li",{parentName:"ul"},"= : matches only if they are equal."),(0,r.kt)("li",{parentName:"ul"},"regEx : regex matching\uff0cmatch characters in regex expression."),(0,r.kt)("li",{parentName:"ul"},"like : string fuzzy matching."),(0,r.kt)("li",{parentName:"ul"},"contains: when it contains the specified value, it matches."),(0,r.kt)("li",{parentName:"ul"},"SpEl: SpEl expression matches."),(0,r.kt)("li",{parentName:"ul"},"Groovy: match through Groovy."),(0,r.kt)("li",{parentName:"ul"},"TimeBefore: before the specified time."),(0,r.kt)("li",{parentName:"ul"},"TimeAfter: after the specified time."))))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"PrintLogs: it will print the matching log with the open option enabled.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Enable: whether to enable the plugin.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Order\uff1athe smaller will have high priorty to execute among multi-rules.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"handle: The operation when the request matches the rule.")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"above picture means: when the request ",(0,r.kt)("inlineCode",{parentName:"p"},"uri")," equals to ",(0,r.kt)("inlineCode",{parentName:"p"},"/http/order/save"),", it will execute based on this rule\uff0cload strategy is ",(0,r.kt)("inlineCode",{parentName:"p"},"random"),".")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"rule advice: combine ",(0,r.kt)("inlineCode",{parentName:"p"},"uri")," condition with ",(0,r.kt)("inlineCode",{parentName:"p"},"match")," the real ",(0,r.kt)("inlineCode",{parentName:"p"},"uri path")," condition as the final filter.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"combine selector means \uff1awhen the request ",(0,r.kt)("inlineCode",{parentName:"p"},"uri")," is ",(0,r.kt)("inlineCode",{parentName:"p"},"/http/order/save"),", it will be redicted to ",(0,r.kt)("inlineCode",{parentName:"p"},"127.0.0.1:8080")," by ",(0,r.kt)("inlineCode",{parentName:"p"},"random")," method."))),(0,r.kt)("h2",{id:"condition-explanation"},"Condition Explanation"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"uri matching \uff08recommend\uff09"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"uri matching is based on your request uri, the frontend won't change anything before accessing the gateway.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"the ",(0,r.kt)("inlineCode",{parentName:"p"},"match")," filter method is the same with",(0,r.kt)("inlineCode",{parentName:"p"},"springmvc")," fuzzy matching.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"in selector\uff0cwe recommend to match with the prefix of uri, and use the specific path in rule.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"when changing the match method, the matching field name can be filled randomly, but make sure the match value must be correct.")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"header matching"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"header matches with your ",(0,r.kt)("inlineCode",{parentName:"li"},"http")," request header value."))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"query matching"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"it matches the query string in your uri, such as: /test?a=1&&b=2.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"so you can add a new condition, choose query method: a   =  1.")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"ip matching"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"it matches the ip of the http caller.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"especially in the waf plugin, if you find some ip is unsafe, you can add a match condition with this ip, then it can't access any more.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"if you use nginx proxy before ShenYu, you can get the right ip with refering to ",(0,r.kt)("a",{parentName:"p",href:"../../developer/custom-parsing-ip-and-host"},"parsing-ip-and-host"))))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"host matching"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"it matches the host of http caller.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"especially in waf plugin, if you find some host is unsafe, you can add a match condition with this host, then it can't access any more.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"if you use nginx proxy before ShenYu, you can get the right ip with refering to ",(0,r.kt)("a",{parentName:"p",href:"../../developer/custom-parsing-ip-and-host"},"parsing-ip-and-host"))))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"post matching"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"not recommend to use.")))))}c.isMDXComponent=!0}}]);